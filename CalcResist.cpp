// CalcResist.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

/// <summary>
/// Метод расчёта сопротивления по формуле 1/R0 = 1/R1+1/R2+1/R3
/// </summary>
/// <param name="R1"></param>
/// <param name="R2"></param>
/// <param name="R3"></param>
/// <returns>Возвращает R0</returns>
double CalcR(double R1, double R2, double R3)
{
    double R0 = 1 / R1 + 1 / R2 +1 / R3;
    return 1 / R0;
}


int main()
{   
    setlocale(LC_ALL, "Russian");

    const int numResistors = 3; // Определяю размер массива
    double resistances[numResistors]; // Создаю массив переменных

    cout << "Для расчёта сопротивления R0, необходимо ввести R1, R2, R3" << endl;

    // В цикле собираю и записываю значения
    for (int i = 0; i < numResistors; ++i) {
        cout << "Введите значение R" << (i + 1) << ": ";
        cin >> resistances[i];
    }

    // Инициализация переменных значениеями полученными от пользователя
    double R1 = resistances[0];
    double R2 = resistances[1];
    double R3 = resistances[2];

    // Показываю результат
    cout << "Спопротивление R0 = " << CalcR(R1, R2, R3);
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
